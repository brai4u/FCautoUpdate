{
  "name": "chromecasts",
  "version": "1.9.0",
  "description": "Query your local network for Chromecasts and have them play media",
  "main": "index.js",
  "dependencies": {
    "castv2-client": "^1.1.0",
    "debug": "^2.1.3",
    "mime": "^1.3.4",
    "multicast-dns": "^6.0.1",
    "simple-get": "^2.0.0",
    "thunky": "^0.1.0",
    "xml2js": "^0.4.8",
    "node-ssdp": "^2.2.0"
  },
  "optionalDependencies": {
    "node-ssdp": "^2.2.0"
  },
  "devDependencies": {
    "standard": "*"
  },
  "scripts": {
    "test": "standard"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mafintosh/chromecasts.git"
  },
  "author": {
    "name": "Mathias Buus",
    "url": "@mafintosh"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/mafintosh/chromecasts/issues"
  },
  "homepage": "https://github.com/mafintosh/chromecasts",
  "gitHead": "d535d255ccb6b75224303977970ce9f3c73aae11",
  "readme": "# chromecasts\r\n\r\nQuery your local network for Chromecasts and have them play media\r\n\r\n```\r\nnpm install chromecasts\r\n```\r\n\r\n## Usage\r\n\r\n``` js\r\nvar chromecasts = require('chromecasts')()\r\n\r\nchromecasts.on('update', function (player) {\r\n  console.log('all players: ', chromecasts.players)\r\n  player.play('http://example.com/my-video.mp4', {title: 'my video', type: 'video/mp4'})\r\n})\r\n```\r\n\r\n## API\r\n\r\n#### `var list = chromecasts()`\r\n\r\nCreates a chromecast list.\r\nWhen creating a new list it will call `list.update()` once.\r\nIt is up to you to call afterwards incase you want to update the list.\r\n\r\n#### `list.update()`\r\n\r\nUpdates the player list by querying the local network for chromecast instances.\r\n\r\n#### `list.on('update', player)`\r\n\r\nEmitted when a new player is found on the local network\r\n\r\n#### `player.play(url, [opts], cb)`\r\n\r\nMake the player play a url. Options include:\r\n\r\n``` js\r\n{\r\n  title: 'My movie',\r\n  type: 'video/mp4',\r\n  seek: seconds, // start by seeking to this offset\r\n  subtitles: ['http://example.com/sub.vtt'], // subtitle track 1,\r\n  autoSubtitles: true // enable first track if you provide subs\r\n}\r\n```\r\n\r\n#### `player.subtitles(track, [cb])`\r\n\r\nEnable subtitle track. Use `player.subtitles(false)` to disable subtitles\r\n\r\n#### `player.pause([cb])`\r\n\r\nMake the player pause playback\r\n\r\n#### `player.resume([cb])`\r\n\r\nResume playback\r\n\r\n#### `player.stop([cb])`\r\n\r\nStop the playback\r\n\r\n#### `player.seek(seconds, [cb])`\r\n\r\nSeek the video\r\n\r\n#### `player.status(cb)`\r\n\r\nGet a status object of the current played video.\r\n\r\n#### `player.on('status', status)`\r\n\r\nEmitted when a status object is received.\r\n\r\n## License\r\n\r\nMIT\r\n",
  "readmeFilename": "README.md",
  "_id": "chromecasts@1.9.0",
  "_shasum": "a0e8f9da98eb160b48d77bcea21b1da910238394",
  "_from": "git+https://github.com/brai4u/chromecasts.git",
  "_resolved": "git+https://github.com/brai4u/chromecasts.git#d535d255ccb6b75224303977970ce9f3c73aae11"
}
